name: Update Action Versions

on:
  schedule:
    - cron: '0 8 * * *' # every day at 8AM UTC
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update_versions:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
    
      - name: Ensure docs folder exists
        run: mkdir -p docs

      - name: Fetch tags for actions/checkout
        run: |
          curl -s https://api.github.com/repos/actions/checkout/tags | jq -r '.[].name' > tags.txt

      - name: Generate Markdown file with release notes
        run: |
          #!/bin/bash

          set -e

          ACTIONS=(
            "actions/checkout"
            "actions/setup-java"
            "actions/setup-python"
            "actions/setup-dotnet"
            "actions/setup-node"
            "actions/upload-artifact"
            "actions/download-artifact"
            "actions/toolkit"
            "actions/github-script"
            "actions/stale"
          )

          echo "# GitHub Actions Versions" > docs/index.md
          echo "" >> docs/index.md

          for repo in "${ACTIONS[@]}"; do
            echo "## $repo" >> docs/index.md
            echo "" >> docs/index.md
            echo "| Major | Latest Minor/Patch |" >> docs/index.md
            echo "|-------|--------------------|" >> docs/index.md

            # Get releases and tags
            releases=$(curl -s "https://api.github.com/repos/$repo/releases")
            tags=$(echo "$releases" | jq -r '.[].tag_name' | grep -E '^v[0-9]+(\.[0-9]+)*$')
            majors=$(echo "$tags" | grep -o '^v[0-9]\+' | sort -Vr | uniq | head -n 2)

            for major in $majors; do
              latest_tag=$(echo "$tags" | grep "^$major" | sort -Vr | head -n 1)
              release=$(echo "$releases" | jq ".[] | select(.tag_name==\"$latest_tag\")")
              notes=$(echo "$release" | jq -r '.body // "No release notes."')

              echo "| $major | $latest_tag |" >> docs/index.md
              echo "" >> docs/index.md
              echo "#### $latest_tag Release Notes" >> docs/index.md
              echo "$notes" >> docs/index.md
              echo "" >> docs/index.md
            done

            echo "" >> docs/index.md
          done      
      - name: Commit and push changes
        run: |
          git config --global user.email "workflow-bot@github.com"
          git config --global user.name "Workflow Bot"
          git add docs/index.md
          git commit -m "Update action versions [skip ci]" || exit 0
          git push
